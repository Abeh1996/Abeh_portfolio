#!/usr/bin/env python
# coding: utf-8

# #### Finding insights from the dataset, Amazon_best_sellers_June_2021.

# ### Task:
# - The main aim of this project is to explore the dataset Amazon_best_sellers_June_2021 and make general findings related to it and as well as creating visualizations.

# ### Project Outline
# This project includes the following steps 
# - Reading and Cleaning of data,
# - Exploratory Data Analysis(EDA),
# - Statistical Analysis,
# - Data Visualization and
# - Observations(Insights gotten from the Amazon_Seller dataset)

# In[1]:


#Importing useful libraries

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns


# ### 1.  Data aquisition and Data cleaning

# In[2]:


#Reading data using pandas library
dataset = pd.read_csv('Amazon_Best_Seller_2021.csv')


# In[3]:


dataset


#     DETAILS:
#     The dataset above shows Amazon's top 100 selling products in June 2021.

# - Checking for empty spaces within the dataset

# In[4]:


dataset.isnull().sum()


# - Eliminating commas from the Price column

# In[5]:


dataset['Reviews Count'] = dataset['Reviews Count'].replace(',','',regex = True)


# In[6]:


data_clean = dataset.drop('Product Link',axis = 1)


# In[7]:


data_clean


# - Eliminating the $ sign

# In[8]:


data_clean['Price'] = data_clean['Price'].str.replace('$','',regex = True)


# In[9]:


data_clean


# In[10]:


data_clean['No of Sellers'] = data_clean['No of Sellers'].str.replace('Sellers','',regex = True)


# In[11]:


data_clean


# In[12]:


data_clean['Rank'] = data_clean['Rank'].str.replace('#','',regex = True)


# In[13]:


data_clean


# - Converting data from String to Integer-type

# In[14]:


data_clean['Rank'] = data_clean['Rank'].astype(int)
data_clean['No of Sellers'] = data_clean['No of Sellers'].astype(int)
data_clean['Price'] = data_clean['Price'].astype(float)
data_clean['Reviews Count'] = data_clean['Reviews Count'].astype(float)


# In[15]:


data_clean


# In[16]:


data_clean['Rank'].sum()


# In[17]:


data_clean['Category'].value_counts()


# ### 2. Statistical Analysis

# In[18]:


data_clean.describe()


# - From the statistics above , it is observed that the minimum number of sellers for a particular product was 1 and the maximum was 214.
# - Also the minimum price at which a product was sold was  88cents 
# and the maximum price was $899.

# In[19]:


pd.set_option('display.max_row',10)


# In[20]:


data_clean


# # 3. Exploratory Data Analysis(EDA)

# 1. What are the number of unique product IDs

# In[21]:


data_clean['ASIN'].value_counts()


# 2. What were the different categories of Amazon products sold?.

# In[22]:


data_clean['Category'].value_counts()


# 3. Which of the product category had the the highest number of ProductIDs?. 

# In[23]:


data_clean['Category'].value_counts().plot(kind = 'bar')
plt.xlabel('Product Category')
plt.ylabel('Frquency')
plt.title('Number of products IDs per Product category')


# 4. What was the total revenew generated by Amazon in June 2021

# In[24]:


data_clean = data_clean.rename(columns = {'Price':'Price($)'})


# In[ ]:





# In[25]:


data_clean['TotalIncome($)'] = data_clean['Price($)']*data_clean['Reviews Count']


# In[26]:


data_clean


# In[27]:


Revenew_total = data_clean['TotalIncome($)'].sum()


# In[28]:


Revenew_total


# 5. Which of these categories contributed the most to the Amazon total revenew in June 2021

# In[29]:


grouped = data_clean.groupby('Category')['TotalIncome($)'].sum()


# In[30]:


grouped.sort_values(ascending = False)


# In[31]:


plt.figure(figsize = (9,7))

explode = [0]*7
explode[4] = 0.3
grouped.plot(kind = 'pie',explode = explode,autopct = '%1.1f%%',shadow = True,fontsize = 14 )
plt.legend(loc = 'right',bbox_to_anchor = (1,0.25,0.7,1.3))


# In[32]:


grouped


# 5. What were the productIDs with frequency above 2.

# In[33]:


Freq_above2 = data_clean['ASIN'].value_counts()


# In[34]:


Freq_above2 [Freq_above2>=2]


# In[35]:


grou = data_clean.groupby('ASIN')['TotalIncome($)'].sum()

grou
# 6. What is the productID with the maximum TotalIncome?.

# In[36]:


data_clean[data_clean['TotalIncome($)' ] == data_clean['TotalIncome($)' ].max() ]


# 7. What is the category of the product with maximum number of reviews?.

# In[37]:


group2 = data_clean.groupby('Category')['Reviews Count'].sum()


# In[38]:


group2


# In[39]:


plt.figure(figsize = (9,7))
explode = [0]*7
explode[3] = 0.3
explode[4] = 0.3

group2.plot(kind = 'pie',explode = explode, autopct = '%1.1f%%', shadow = True,fontsize = 14)
plt.legend(loc = 'right',bbox_to_anchor = (1,0.4,0.5,1))


# 8. Which of the productIDs had the max number of sellers?.

# In[40]:


data_clean[data_clean['No of Sellers' ] == data_clean['No of Sellers' ].max() ]


# In[41]:


group3 = data_clean.groupby('Category')['No of Sellers'].sum()


# In[42]:


plt.figure(figsize = (9,7))
explode = [0]*7
explode[3] = 0.3
explode[4] = 0.3

group3.plot(kind = 'pie', autopct = '%1.1f%%', shadow = True,fontsize = 14)
plt.legend(loc = 'right',bbox_to_anchor = (1,0.4,0.5,1))


# In[43]:


gro_1 = data_clean.groupby('Category').get_group('Electronics')


# In[44]:


gro_1


# 9. what is the  productID of the electronic product with the maximum reviews

# In[45]:


gro_1[gro_1['Reviews Count'] == gro_1['Reviews Count'].max() ]


# 10.  what is the  productID of the electronic product with the max TotalIcome?.

# In[46]:


gro_1[gro_1['TotalIncome($)'] == gro_1['TotalIncome($)'].max() ]


# 11. what is the productID of the product with the max TotalIcome?.
# 

# In[47]:


data_clean[data_clean['Reviews Count'] == data_clean['Reviews Count'].max()]


# In[48]:


data_clean[data_clean['Reviews Count'] == data_clean['Reviews Count'].min()]


# In[49]:


dat = data_clean[data_clean['Reviews Count'] >= 1000]


# In[50]:



len(dat)


# In[51]:


len(data_clean)


# # 4. Data Visualization

# In[52]:


cor = data_clean.corr()
print(cor)


# In[53]:


sns.heatmap(cor, annot = True)


# OBSERVATION:
# From the heatmap above ,there exist a strong correlation between Reviews counts and Total Income,Reviews counts and rating

# In[54]:


plt.figure(figsize = (9,9))
sns.stripplot(x = 'Category',y = 'Reviews Count',data = data_clean)
plt.xticks( rotation = 45,ha = 'right',rotation_mode = 'anchor')
plt.title('Reviews counts for the different product categories')


# OBSERVATION:
# From the above stripplot it is seen that Electronics products had the highest number of reviews(above 600000) followed by Gift cards and Video games while toys and Games,Camera & photos ,clothing,shoes and jewellry had the least number of reviews(below 2000000).

# In[55]:


data_clean[['Reviews Count','TotalIncome($)']].plot(kind = 'line')


# 11. Determine the total number of reviews for products that had only one seller and number of reviews for products that had more than one seller.

# In[56]:


df_oneseller = data_clean[data_clean['No of Sellers'] == 1]


# In[57]:


df_oneseller['Reviews Count'].sum()


# In[58]:


df_moreseller = data_clean[data_clean['No of Sellers'] > 1]


# In[59]:


df_moreseller['Reviews Count'].sum()


# From the above findings, it shows that products that were sold by only seller had the maximum number of reviews.

# In[60]:


sns.pairplot(data_clean)


# In[61]:


plt.figure(figsize = (9,9))
sns.boxplot(x = 'Category',y = 'TotalIncome($)',data = data_clean)
plt.xticks(rotation = 45)


# OBSERVATION:
# From the above box plot it is observed that the median of total income for the Gift Cards is the largest as compare to those  of the other product category and followed by the median of total income for the Electronics products.

# In[62]:


plt.scatter(data_clean['Reviews Count'],data_clean['TotalIncome($)'])
plt.ylabel('Review counts')
plt.xlabel('Total income')
plt.title('Variation of reviews with total income')


# 12. Which  product category had the highest rating value

# In[63]:


plt.figure(figsize = (8,8))
sns.stripplot(x= 'Category',y = 'Rating',data = data_clean)
plt.xticks(rotation = 45)
plt.title('Product rating')


# In[64]:


group_3 = data_clean.groupby('Category')['Rating'].value_counts()


# In[65]:


plt.figure(figsize = (9,6))
sns.stripplot(x = 'Rating' ,y = 'Reviews Count',hue = 'Category',data = data_clean)


# 13. Identify the productIDs of the products with rating greater or equal to 4.

# In[66]:


data_clean[data_clean['Rating'] == data_clean['Rating'].max() ]


#  The table above shows the different product that were rated 5 and despite the fact that they were rated high the had minimum numbers of reviews.

# In[67]:


grouping.get_group('Electronics')


# In[ ]:


data_clean['Rating'].max()


# #  Observations

# 1. In June 2021 Amazon sold out 707 of its' products.
# 
# 2. The products were of the following categories: Electronics(147),Camera&Photos(100),Clothing,Shoes&Jewelry(100)
#  Video games(95),Gift cards(100),Toy&Games(95) and Books(70).
#  
# 3. It was also aboserved that Gift cards had the highest number of reviews(61.5% of the total reviews) and contributed the most to the total revenew(58.6% of total income) and followed by Electronics products with 20.8% of total reviews and contributed 32.0% of the total revenew.Camera & Photos had the least number of reviews, 1.3% of total reviews and contributed 0.4% of the total revenew.
# 
# 4.  Gift cards had the least number of sellers(1.7% of total sellers) but contributed the most to the total revenew while Video games had the maximum number of sellers(45.7%) but contributed only 3.1% of the total revenew. But in the case of Electronics products,
# there were more sellers(15.4% of sellers) and also they made a great contribution to the total revenew(20.8%).
# 
# 5. From the above findings it shows that products that were sold by single sellers had the maximum number of reviews.
# 
# 6. B07FZ8S74R and B07W95GZNH are the Electronics products that had the maximum number of reviews and contributed the maximum percent of totalIncome.
# 7. B088CK6GP1 is Video game product that had the maximum rating.
# 8. It was also observed that there was a strong correlation between Reviews and the total revenew. 
# 

# ### Future work
# - Here is just a proposal,I hope it will be of help to someone. I will be very grateful if you can  go through this and be able to comment on my errors for i am just a beginner as far as Data sciences is concerned.
# - Proper visualization and findings still have to be done on this dataset. 

# # References

# - Dataset:kaggle.com/datasets/Amazon_Best_Seller_2021

# In[ ]:




